version: '3.8'

services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   networks:
  #     - kafka-net
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - kafka-net
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   ports:
  #     - "9092:9092"

  machine:
    build: ./src/machine_cnc
    depends_on:
      # - kafka
      - postgres
    # environment:
    #   KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    # networks:
    #   - kafka-net
    restart: on-failure

  nodered:
    image: nodered/node-red
    ports:
      - "1880:1880"
    # depends_on:
    #   - kafka
    # networks:
    #   - kafka-net
    volumes:
      - ./nodered-data:/data

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  grafana:
    image: grafana/grafana
    restart: always
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

# networks:
#   kafka-net:

volumes:
  nodered_data:
  postgres-data:
  grafana-storage:
